{"version":3,"sources":["actionTypes/actionTypes.ts","mock-data.ts","reducers/projectsReducer.ts","reducers/tasksReducer.ts","reducers/currentProjectReducer.ts","reducers/errorReducer.ts","reducers/rootReducer.ts","components/ProjectCard.tsx","components/ModalAddProject.tsx","components/ProjectsList.tsx","containers/ProjectsListContainer.tsx","actionCreators/actionCreators.ts","components/TaskCard.tsx","styles/styled.ts","components/ModalAddTask.tsx","components/ProjectDetails.tsx","containers/ProjectDetailsContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SET_PROJECTS","GET_PROJECTS_SUCCESS","ADD_PROJECT","SET_CURRENT_PROJECT","ADD_TASK","DELETE_TASK","SET_TASKS","GET_TASKS_BY_PROJECT_SUCCESS","data","projectsList","id","name","creationDate","tasksList","parentProjectId","description","estimate","initialState","projects","projectsReducer","state","action","type","actions","newProject","projectName","Date","toLocaleString","Math","floor","random","tasks","tasksReducer","newTask","taskName","taskDescription","filter","task","currentProject","getErrorMatches","actionType","exec","errorReducer","matches","requestName","requestStatus","error","rootReducer","combineReducers","ProjectCard","props","ListItem","button","onClick","toggle","item","ListItemText","primary","Divider","ModalAddProject","React","open","setOpen","setName","handleClose","Grid","xs","IconButton","aria-label","color","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","event","target","value","DialogActions","Button","length","addProject","ProjectsList","List","map","project","toggleProject","connect","dispatch","useDispatch","TaskCard","Card","CardContent","className","CardActions","deleteTask","StyledGrid","Styled","div","setDescription","setEstimate","parseInt","replace","addTask","ProjectDetails","container","spacing","alignContent","Typography","variant","gutterBottom","ModalAddTask","tasksArr","tasksByProject","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9647f81.chunk.js","sourcesContent":["import { IProject, ITask } from \"../components/interfaces\";\n\nexport const SET_PROJECTS = \"projectsActionTypes/SET_PROJECTS\";\nexport interface SetProjectsAction {\n  type: typeof SET_PROJECTS;\n  projects: Array<IProject>;\n}\n\nexport const GET_PROJECTS = \"projectsActionTypes/GET_PROJECTS\";\nexport interface GetProjectsAction {\n  type: typeof GET_PROJECTS;\n}\n\nexport const GET_PROJECTS_SUCCESS = \"projectsActionTypes/GET_PROJECTS_SUCCESS\";\nexport interface GetProjectsSuccessAction {\n  type: typeof GET_PROJECTS_SUCCESS;  \n  projects: Array<IProject>;\n}\n\nexport const ADD_PROJECT = \"projectsActionTypes/ADD_PROJECT\";\nexport interface AddProjectAction {\n    type: typeof ADD_PROJECT; \n    projectName: string;\n}\n\nexport const SET_CURRENT_PROJECT = \"projectsActionTypes/SET_CURRENT_PROJECT\";\nexport interface SetCurrentProjectAction {\n    type: typeof SET_CURRENT_PROJECT;\n    currentProject: IProject;\n}\n\nexport const ADD_TASK = \"projectsActionTypes/ADD_TASK\";\nexport interface AddTaskAction {\n  type: typeof ADD_TASK; \n  taskName: string;\n  taskDescription: string;\n  estimate: number;\n  parentProjectId: IProject['id'];\n}\n\nexport const DELETE_TASK = \"projectsActionTypes/DELETE_TASK\";\nexport interface DeleteTaskAction {\n  type: typeof DELETE_TASK; \n  id: ITask['id'];\n}\n\nexport const GET_CURRENT_PROJECT = \"projectsActionTypes/GET_CURRENT_PROJECT\";\nexport interface GetCurrentProjectAction {\n    type: typeof GET_CURRENT_PROJECT;\n}\n\nexport const GET_CURRENT_PROJECT_SUCCESS = \"projectsActionTypes/GET_CURRENT_PROJECT_SUCCESS\";\nexport interface GetCurrentProjectSuccessAction {\n    type: typeof GET_CURRENT_PROJECT_SUCCESS;    \n    currentProject: IProject;\n}\n\nexport const SET_TASKS = \"projectsActionTypes/SET_TASKS\";\nexport interface SetTasksAction {\n    type: typeof SET_TASKS;\n    tasks: Array<ITask>;\n}\n\nexport const GET_TASKS_BY_PROJECT = \"projectsActionTypes/GET_TASKS_BY_PROJECT\";\nexport interface GetTasksByProjectAction {\n    type: typeof GET_TASKS_BY_PROJECT;\n    id: IProject['id'];\n}\n\nexport const GET_TASKS_BY_PROJECT_SUCCESS = \"projectsActionTypes/GET_TASKS_BY_PROJECT_SUCCESS\";\nexport interface GetTasksByProjectSuccessAction {\n    type: typeof GET_TASKS_BY_PROJECT_SUCCESS;\n    id: IProject['id'];\n    tasks: Array<ITask>;\n}\n\nexport const GET_DATA_FAILURE = \"projectsActionTypes/GET_DATA_FAILURE\";\nexport interface GetDataFailureAction {\n  type: typeof GET_DATA_FAILURE;  \n  error: Error | string;\n}\n\n\nexport type ProjectsAction = \n| SetProjectsAction\n| AddProjectAction\n| AddTaskAction\n| DeleteTaskAction\n| GetProjectsAction\n| GetProjectsSuccessAction\n| AddProjectAction\n| SetCurrentProjectAction\n| GetCurrentProjectAction\n| GetCurrentProjectSuccessAction\n| SetTasksAction\n| GetTasksByProjectAction\n| GetTasksByProjectSuccessAction\n| GetDataFailureAction\n","export const data = { projectsList: [\r\n    {\r\n        id: 1,\r\n        name: 'Internal project #1',\r\n        creationDate: '2019-01-16',\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'GENERAL',\r\n        creationDate: '2018-01-16',\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Test Project',\r\n        creationDate: '2018-08-19',\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Face Recognition App',\r\n        creationDate: '2017-02-18',\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Top Visuals',\r\n        creationDate: '2017-03-17',\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Akvelon Inc stats',\r\n        creationDate: '2020-01-20',\r\n    },\r\n],\r\ntasksList : [\r\n    {\r\n        id: 1,\r\n        parentProjectId: 1,\r\n        name: 'schedule meeting',\r\n        description: 'new teammate onboard meeting',\r\n        estimate: 2,\r\n        creationDate: '2018-01-16',\r\n    },\r\n    {\r\n        id: 2,\r\n        parentProjectId: 1,\r\n        name: 'fix bug',\r\n        description: 'unexpected behavior on...',\r\n        estimate: 4,\r\n        creationDate: '2018-01-16',\r\n    },\r\n    {\r\n        id: 3,\r\n        parentProjectId: 2,\r\n        name: 'create git repo',\r\n        description: 'create repo, give access to ....',\r\n        estimate: 2,\r\n        creationDate: '2018-03-04',\r\n    },\r\n    {\r\n        id: 4,\r\n        parentProjectId: 2,\r\n        name: 'log work',\r\n        description: 'log all forgotten work hours',\r\n        estimate: 1,\r\n        creationDate: '2019-03-04',\r\n    },\r\n    {\r\n        id: 5,\r\n        parentProjectId: 2,\r\n        name: 'fix bug',\r\n        description: 'unexpected behavior on...',\r\n        estimate: 4,\r\n        creationDate: '2019-03-08',\r\n    },\r\n    {\r\n        id: 6,\r\n        parentProjectId: 2,\r\n        name: 'count opened issues',\r\n        description: 'close if solved ',\r\n        estimate: 3,\r\n        creationDate: '2019-03-08',\r\n    },\r\n    {\r\n        id: 7,\r\n        parentProjectId: 3,\r\n        name: 'log work',\r\n        description: 'log all forgotten work hours',\r\n        estimate: 8,\r\n        creationDate: '2019-07-15',\r\n    },\r\n    {\r\n        id: 8,\r\n        parentProjectId: 3,\r\n        name: 'implement task #233432545',\r\n        description: 'take some time for investigation if needed',\r\n        estimate: 1,\r\n        creationDate: '2017-07-15',\r\n    },\r\n    {\r\n        id: 9,\r\n        parentProjectId: 3,\r\n        name: 'create git repo',\r\n        description: 'create repo, give access to ....',\r\n        estimate: 3,\r\n        creationDate: '2017-07-15',\r\n    },\r\n    {\r\n        id: 10,\r\n        parentProjectId: 3,\r\n        name: 'implement task #22545',\r\n        description: 'close if solved',\r\n        estimate: 3,\r\n        creationDate: '2017-09-10',\r\n    },\r\n    {\r\n        id: 11,\r\n        parentProjectId: 4,\r\n        name: 'implement task #233545',\r\n        description: 'take some time for investigation if needed',\r\n        estimate: 3,\r\n        creationDate: '2019-09-10',\r\n    },\r\n    {\r\n        id: 12,\r\n        parentProjectId: 4,\r\n        name: 'fix bug',\r\n        description: 'unexpected behavior on...',\r\n        estimate: 10,\r\n        creationDate: '2017-10-12',\r\n    },\r\n    {\r\n        id: 13,\r\n        parentProjectId: 4,\r\n        name: 'count opened issues',\r\n        description: 'close if solved ',\r\n        estimate: 10,\r\n        creationDate: '2019-10-12',\r\n    },\r\n    {\r\n        id: 14,\r\n        parentProjectId: 1,\r\n        name: 'implement task #8565',\r\n        description: 'take some time for investigation if needed',\r\n        estimate: 1,\r\n        creationDate: '2020-10-12',\r\n    },\r\n    {\r\n        id: 15,\r\n        parentProjectId: 5,\r\n        name: 'create git repo',\r\n        description: 'create repo, give access to ....',\r\n        estimate: 1,\r\n        creationDate: '2020-02-27',\r\n    },\r\n    {\r\n        id: 16,\r\n        parentProjectId: 5,\r\n        name: 'big issue',\r\n        description: 'big issue description...',\r\n        estimate: 1,\r\n        creationDate: '2019-02-27',\r\n    },\r\n    {\r\n        id: 17,\r\n        parentProjectId: 2,\r\n        name: 'code refactoring',\r\n        description: 'inspect code to find possible issues ....',\r\n        estimate: 1,\r\n        creationDate: '2020-02-27',\r\n    },\r\n    {\r\n        id: 18,\r\n        parentProjectId: 5,\r\n        name: 'fix bug',\r\n        description: 'unexpected behavior - steps to reproduce...',\r\n        estimate: 1,\r\n        creationDate: '2019-02-27',\r\n    },\r\n    {\r\n        id: 19,\r\n        parentProjectId: 6,\r\n        name: 'log work',\r\n        description: 'log all forgotten work hours',\r\n        estimate: 1,\r\n        creationDate: '2020-02-27',\r\n    },\r\n    {\r\n        id: 20,\r\n        parentProjectId: 6,\r\n        name: 'count opened issues',\r\n        description: 'close if solved ',\r\n        estimate: 6,\r\n        creationDate: '2019-01-16',\r\n    },\r\n    {\r\n        id: 21,\r\n        parentProjectId: 6,\r\n        name: 'implement task #29655',\r\n        description: 'write weekly report to the client',\r\n        estimate: 2,\r\n        creationDate: '2019-01-16',\r\n    },\r\n    {\r\n        id: 22,\r\n        parentProjectId: 6,\r\n        name: 'create git repo',\r\n        description: 'create repo, give access to ....',\r\n        estimate: 5,\r\n        creationDate: '2019-01-16',\r\n    },\r\n]\r\n}","import { IProject } from \"../components/interfaces\";\nimport * as actions from '../actionTypes/actionTypes';\nimport { data } from '../mock-data';\n\nexport interface ProjectsState {\n    projects: Array<IProject>\n}\n\nconst initialState = {\n    projects: data.projectsList\n};\n\n\nexport const projectsReducer = (state: ProjectsState = initialState, action: actions.ProjectsAction ): ProjectsState => {\n   switch (action.type) {     \n        case actions.ADD_PROJECT:\n            {\n                const newProject: IProject = {\n                    name: action.projectName,\n                    creationDate: new Date().toLocaleString(),\n                    id: Math.floor(Math.random()*100000)\n                }\n                return { \n                    ...state,\n                    projects: [...state.projects, newProject]\n                } \n            }\n        case actions.SET_PROJECTS:\n        case actions.GET_PROJECTS_SUCCESS:\n            return {\n                projects: action.projects\n            };\n        default:\n            return state;        \n   }    \n}\n\nexport default projectsReducer;","import { ITask } from \"../components/interfaces\";\nimport * as actions from '../actionTypes/actionTypes';\nimport { data } from '../mock-data';\n\nexport interface TasksState {\n    tasks: Array<ITask>;\n}\n\nconst initialState = {\n    tasks: data.tasksList\n};\n\nexport const tasksReducer = (state: TasksState = initialState, action: actions.ProjectsAction ) => {\n    switch (action.type) {\n        case actions.ADD_TASK:\n            {\n                const newTask:ITask = {\n                    name: action.taskName,\n                    description: action.taskDescription,\n                    estimate: action.estimate,\n                    parentProjectId: action.parentProjectId,\n                    creationDate: new Date().toLocaleString(),\n                    id: Math.floor(Math.random()*100000)\n                }\n                return {\n                    ...state,\n                    tasks: [...state.tasks, newTask]\n                }\n            }\n        case actions.DELETE_TASK:         \n                return {\n                    ...state,\n                    tasks: state.tasks.filter(task => task.id !== action.id) \n                }            \n            \n        case actions.SET_TASKS:\n        case actions.GET_TASKS_BY_PROJECT_SUCCESS:\n            return {\n               tasks: action.tasks\n            }\n        default:\n            return state;\t\n        }\n}\n\nexport default tasksReducer;","import { IProject } from \"../components/interfaces\";\nimport * as actions from '../actionTypes/actionTypes';\n\nexport interface CurrentProjectState {\n    currentProject : IProject | null\n  }\n  \nconst initialState: CurrentProjectState = {\n   currentProject: null\n  };\n\nexport const currentProjectReducer = (state: CurrentProjectState = initialState, action: actions.ProjectsAction ) => {\n\tswitch (action.type) {\n\t\tcase actions.SET_CURRENT_PROJECT:\n\t\t\treturn {\n\t\t\t\tcurrentProject: action.currentProject\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\t\t\n\t}\n}\n","interface ErrorAction {\n    type: string;\n    error: Error | string;\n  }\n  \n  export interface ErrorState {\n    [key: string]: null | Error | string;\n  }\n  \n  const getErrorMatches = (actionType: string) =>\n    /(.*)_(REQUEST|FAILURE|CLEAR_ERRORS)/.exec(actionType);\n  \n  export const errorReducer = (state: ErrorState = {}, action: ErrorAction) => {\n    const matches = getErrorMatches(action.type);\n  \n    if (!matches) {\n      return state;\n    }\n  \n    const [, requestName, requestStatus] = matches;\n    return {\n      ...state,\n      [requestName]: requestStatus === \"FAILURE\" ? action.error : null\n    };\n  };\n  \n  export default errorReducer;\n  ","import { combineReducers } from 'redux';\nimport { projectsReducer } from './projectsReducer';\nimport { tasksReducer } from './tasksReducer';\nimport { currentProjectReducer } from './currentProjectReducer';\nimport { errorReducer } from './errorReducer';\n\nexport const rootReducer = combineReducers({\n    projects: projectsReducer,\n    tasks: tasksReducer,\n    currentProject: currentProjectReducer,\n    error: errorReducer    \n})\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;","import * as React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\ninterface IProjectProps {\r\n    item: any;\r\n    toggle: any\r\n}\r\n\r\nconst ProjectCard = (props: IProjectProps) => (\r\n    <>\r\n        <ListItem button onClick={()=> {props.toggle(props.item)}}>\r\n            <ListItemText  primary= {props.item.name} />\r\n        </ListItem>\r\n        <Divider />\r\n    </>\r\n    \r\n);\r\n\r\nexport default ProjectCard;\r\n","import * as React from 'react';\nimport { Button, Dialog, DialogTitle, TextField, DialogActions, DialogContent, DialogContentText,  Grid, IconButton } from '@material-ui/core';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\ninterface IProjectModalProps {\n    addProject: any\n}\n\n\nexport const ModalAddProject = (props: IProjectModalProps) => {  \n    const [open, setOpen] = React.useState(false);\n    const [name, setName] = React.useState(\"\");\n\n   \n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setName(\"\");\n        setOpen(false);        \n    };     \n\n    const handleSubmit = () => {\n        name.length && name.length > 3 && props.addProject(name); \n        handleClose();\n    }\n    return (\n    <>\n        <Grid item xs={3}>\n            <IconButton aria-label=\"add\"  color=\"primary\" onClick={handleOpen}>\n                <AddCircleOutlineIcon/>\n            </IconButton>\n        </Grid>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create New Project</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter project's name and press \"CREATE\"\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Project Name\"\n            type=\"name\"\n            fullWidth\n            onChange={event => setName(event.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Create\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n     </> \n    );\n}\n\n\nexport default ModalAddProject;","import * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport { IProject } from './interfaces';\nimport ProjectCard from './ProjectCard';\nimport ModalAddProject from './ModalAddProject';\n\ninterface IProjectsListProps {\n    projectsList: Array<IProject>;\n    toggleProject: any,\n    addProject: any\n}\n\nconst ProjectsList = (props: IProjectsListProps) => (\n    <Grid item xs={3}>\n        <List>\n        {props.projectsList.map((project: IProject) => (\n            <ProjectCard key={`project-${project.id}`} item={project} toggle={props.toggleProject} />\n        ))}\n        </List>\n        <ModalAddProject addProject={props.addProject}/>\n    </Grid>\n    \n    \n);\n\nexport default ProjectsList;\n","import React from 'react';\nimport { connect, useDispatch } from \"react-redux\";\n\nimport { AppState } from '../reducers/rootReducer';\nimport { addProject, setCurrentProject } from '../actionCreators/actionCreators';\nimport ProjectsList from '../components/ProjectsList';\n\n\nconst ProjectsListContainer = ({projects}) => {\n    const dispatch = useDispatch()\n    return <ProjectsList \n\t\t\tprojectsList={projects} \n\t\t\ttoggleProject={(item)=>{dispatch(setCurrentProject(item))}} \n\t\t\taddProject={(name) => {dispatch(addProject(name))}} />;\n};\n\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n      projects: state.projects.projects\n    };\n  };\n\n\nexport default connect(\n    mapStateToProps,\n    null\n  )(ProjectsListContainer);\n  ","import { IProject, ITask } from \"../components/interfaces\";\nimport * as actions from '../actionTypes/actionTypes';\n\nexport function setProjects(projects: Array<IProject>): actions.SetProjectsAction {\n    return {\n      type: actions.SET_PROJECTS,\n      projects\n    };\n}\n\nexport function getProjects(): actions.GetProjectsAction {\n    return{\n        type: actions.GET_PROJECTS\n    };\n}\n\n\nexport function getProjectsSuccess(projects: Array<IProject>): actions.GetProjectsSuccessAction {\n    return{\n        type: actions.GET_PROJECTS_SUCCESS,\n        projects\n    };\n}\n\nexport function addProject(projectName: string): actions.AddProjectAction {\n    return{\n        type: actions.ADD_PROJECT,\n        projectName: projectName\n    };\n}\n\nexport function addTask(taskName: string, taskDescription: string, estimate: number, parentProjectId: IProject['id']): actions.AddTaskAction {\n    return{\n        type: actions.ADD_TASK,\n        taskName: taskName, \n        taskDescription: taskDescription, \n        estimate: estimate,\n        parentProjectId: parentProjectId\n    };\n}\n\nexport function deleteTask(id: ITask['id']): actions.DeleteTaskAction {\n    return {\n        type: actions.DELETE_TASK,\n        id: id\n    }\n}\n\nexport function setCurrentProject(currentProject: IProject): actions.SetCurrentProjectAction {\n    return {\n      type: actions.SET_CURRENT_PROJECT,\n      currentProject: currentProject \n    };\n}\n\nexport function getCurrentProject(): actions.GetCurrentProjectAction {\n    return {\n      type: actions.GET_CURRENT_PROJECT\n    };\n}\n\nexport function getCurrentProjectSuccess(currentProject: IProject): actions.GetCurrentProjectSuccessAction {\n    return {\n      type: actions.GET_CURRENT_PROJECT_SUCCESS,\n      currentProject\n    };\n}\n\nexport function setTasks(tasks: Array<ITask>): actions.SetTasksAction {\n    return{\n        type: actions.SET_TASKS,\n        tasks\n    };\n}\n\nexport function getTasksByProject(id: IProject['id']): actions.GetTasksByProjectAction {\n    return{\n        type: actions.GET_TASKS_BY_PROJECT,\n        id\n    };\n}\n\nexport function getTasksByProjectSuccess(tasks: Array<ITask>, id: IProject['id']): actions.GetTasksByProjectSuccessAction {\n    return{\n        type: actions.GET_TASKS_BY_PROJECT_SUCCESS,\n        id,\n        tasks\n    };\n}\n\nexport function getDataFailure(error: Error | string): actions.GetDataFailureAction {\n    return {\n        type: actions.GET_DATA_FAILURE,\n        error\n    };\n}","import * as React from 'react';\nimport { Card, CardContent, CardActions, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\ninterface ITaskProps {\n    item: any,\n    deleteTask: any\n}\n\nconst TaskCard = (props: ITaskProps) => (\n        <Card>\n            <CardContent>\n                <b><div className=\"name\">{props.item.name}</div></b>\n                <div className=\"description\">{props.item.description}</div>\n                <div className=\"date-created\">created: {props.item.creationDate}</div>\n                <div className=\"estimate\">estimation (hours): {props.item.estimate} </div>\n            </CardContent>\n            <CardActions>\n                <IconButton aria-label=\"delete\" onClick={() => props.deleteTask(props.item.id)}>\n                    <DeleteIcon />\n                </IconButton>\n            </CardActions>            \n        </Card>\n);\n\nexport default TaskCard;\n","import Styled from 'styled-components';\n\nexport const StyledGrid = Styled.div`\ndisplay: grid;  \nwidth: 100%;\ngrid-template-columns: repeat(auto-fill,minmax(300px,1fr));\ngrid-auto-rows: minmax(40px, auto);           \ngrid-gap: 1em;\n`;\n\n","import * as React from 'react';\nimport { Button, Dialog, DialogTitle, TextField, DialogActions, DialogContent, DialogContentText,  Grid, IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\ninterface IProjectModalProps {\n    addTask: any\n}\n\n\nexport const ModalAddProject = (props: IProjectModalProps) => {  \n    const [open, setOpen] = React.useState(false);\n    const [name, setName] = React.useState(\"\");\n    const [description, setDescription] = React.useState(\"\");\n    const [estimate, setEstimate] = React.useState(0);\n\n   \n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setName(\"\");\n        setOpen(false);        \n    };     \n\n    const handleSubmit = () => {\n        name.length && name.length > 3 && description.length && props.addTask(name, description, estimate); \n        handleClose();\n    }\n    return (\n    <>\n        <Grid item xs={3}>\n            <IconButton aria-label=\"addTask\"  color=\"primary\" onClick={handleOpen}>\n                <AddIcon />\n            </IconButton>\n        </Grid>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        \t<DialogTitle id=\"form-dialog-title\">New Task</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\tEnter name, description, estimate (optional) and press \"CREATE\"\n\t\t\t\t</DialogContentText>\n\t\t\t\t<TextField\n\t\t\t\tautoFocus\n\t\t\t\tmargin=\"dense\"\n\t\t\t\tid=\"name\"\n\t\t\t\tlabel=\"Task Name\"\n\t\t\t\ttype=\"name\"\n\t\t\t\tfullWidth\n\t\t\t\tonChange={event => setName(event.target.value)}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tid=\"description\"\n\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\ttype=\"description\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tonChange={event => setDescription(event.target.value)}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tid=\"description\"\n\t\t\t\t\tlabel=\"Estimate\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tonChange={event => setEstimate(parseInt(event.target.value.replace(/\\D/,''), 10))}\n\t\t\t\t/>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleSubmit} color=\"primary\">\n\t\t\t\t\tCreate\n\t\t\t\t</Button>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n      \t</Dialog>\n     </> \n    );\n}\n\n\nexport default ModalAddProject;","import * as React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { IProject, ITask } from './interfaces';\r\nimport TaskCard from './TaskCard';\r\nimport { StyledGrid } from '../styles/styled';\r\nimport ModalAddTask from './ModalAddTask';\r\n\r\ninterface IProjectDetailsProps {\r\n    currentProject: IProject;\r\n    tasksList: Array<ITask>;\r\n    addTask:any;\r\n    deleteTask: any;\r\n}\r\n\r\nconst ProjectDetails = (props: IProjectDetailsProps) =>     \r\n    (\r\n    <Grid container item xs={9} spacing={3} >  \r\n       {props.currentProject &&\r\n       <Grid item xs= {12} alignContent=\"center\">            \r\n            <br />\r\n             <Typography variant=\"h5\" gutterBottom>\r\n               {props.currentProject.name}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                creation date: {props.currentProject.creationDate}\r\n            </Typography>         \r\n        </Grid>\r\n       }        \r\n        {props.tasksList && props.currentProject && \r\n            <StyledGrid> \r\n                {\r\n                    props.tasksList.map((task: ITask) => (\r\n                    <TaskCard key={`task-${task.id}`} item={task} deleteTask={props.deleteTask} />\r\n                ))\r\n                }   \r\n            <ModalAddTask  addTask={props.addTask} />               \r\n            </StyledGrid> \r\n        }\r\n        {}\r\n        {!props.tasksList && \r\n        <Typography variant=\"h6\" gutterBottom>\r\n            Select Project\r\n        </Typography>\r\n        }     \r\n    </Grid>\r\n);\r\n        \r\nexport default ProjectDetails;\r\n","import React from 'react';\nimport { connect, useDispatch } from \"react-redux\";\n\nimport { AppState } from '../reducers/rootReducer';\nimport { addTask, deleteTask } from '../actionCreators/actionCreators';\nimport ProjectDetails from '../components/ProjectDetails';\n\nconst ProjectDetailsContainer = ({currentProject, tasks}) => {\n\tconst dispatch = useDispatch();\n\tconst tasksArr = [...tasks];\n\tconst tasksByProject = currentProject ? tasksArr.filter(task => task.parentProjectId === currentProject.id) : [];\n\treturn (\n\t\t<ProjectDetails \n\t\t\tcurrentProject={currentProject} \n\t\t\ttasksList={tasksByProject} \n\t\t\taddTask={(name, description, estimate)=> {dispatch(addTask(name, description, estimate, currentProject.id ))}} \n\t\t\tdeleteTask={(id) => {dispatch(deleteTask(id))}}\n\t\t\t/>\n\t);\n};\n\nconst mapStateToProps = (state: AppState) => {\n\treturn {\n\t\t\ttasks: state.tasks.tasks,\n\t\t\tcurrentProject: state.currentProject.currentProject\t\t\t\n\t\t};\n\t};\n\t\n\nexport default connect(\n\t\tmapStateToProps,\n\t\tnull\n\t)(ProjectDetailsContainer);\n\t\n\n","import React from 'react';\r\nimport { createStore,compose } from 'redux';\r\nimport { rootReducer } from './reducers/rootReducer';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProjectsListContainer from './containers/ProjectsListContainer';\r\nimport ProjectDetailsContainer from './containers/ProjectDetailsContainer';\r\n\r\n\r\ndeclare global {\r\n    interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers());\r\n\r\n\r\nfunction App() {\r\n    \r\n    return (\r\n        <Provider store={store}>\r\n            <Grid container spacing={3} className=\"App\">\r\n                <ProjectsListContainer />\r\n                <ProjectDetailsContainer />\r\n            </Grid>\r\n        </Provider>\r\n        \r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}